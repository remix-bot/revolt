<style>
.notification {
  position: relative;
  background-color: rgb(31, 41, 55);
  /*padding: 0.5rem;
  padding-left: 1rem;
  padding-right: 1rem;*/
  border-radius: 0 3px 3px 0;
  box-shadow: 0px 4px 12px rgb(0 0 0 / 40%);
  color: white;
  display: flex;
  flex-direction: column;
  font-size: 90%;
  width: 32rem;

  transition: transform 0.1s;
  transition-timing-function: linear;

  background-color: #e89d96;
  color: #7a1200;
}
.notification:before {
  background-color: #d13b2e;
  content: "";
  height: 100%;
  width: 30px;
  position: absolute;
  left: -1.5rem;
  border-radius: 2px 0 0 2px;
}
.info {
  background-color: #7ebef7;
  color: #0e3377;
}
.info:before {
  background-color: #0f82e6;
}
.notif-title {
  font-size: 120%;
  padding-left: 1rem;
  padding-right: 1rem;
  padding-top: 0.5rem;
  padding-bottom: 0.5rem;
}
.notif-content {
  background-color: rgba(255, 255, 255, 0.3);
  padding-left: 1rem;
  padding-right: 1rem;
  padding-bottom: 0.5rem;
  padding-top: 0.5rem;
  border-radius: 0 0 3px 0;
}
.closebtn {
  cursor: pointer;
  position: absolute;
  right: 0.5rem;
  top: 0.25rem;
}
</style>

<div style="
  display: block;
  position: fixed;
  z-index: 1000;
  top: 0;
  right: 0;
  align-items: center;
  padding: 1rem;
  max-height: 100vh;
  display: flex;
  flex-direction: column;
  gap: 1rem" id="notifications">
</div>

<script>
const removeNotif = (el) => {
  const idx = notifications.find(e => e.id == el.id);
  notifications.splice(idx, 1);
  setInterval(() => {
    el.remove();
  }, 100);
  el.style.transform = "scale(0.7)";
}
const notifications = [];
const nContainer = document.getElementById("notifications");

const addNotification = (title, description, time=5000, type="info") => {
  const container = document.createElement("div");
  container.classList = "notification " + type;
  container.id = "notification" + (Math.random() + "").replaceAll(".", "");

  const t = document.createElement("h1");
  t.classList.add("notif-title");
  t.innerHTML = title;
  container.appendChild(t);
  const desc = document.createElement("div");
  desc.classList.add("notif-content");
  desc.innerHTML = description;
  container.appendChild(desc);
  const closebtn = document.createElement("div");
  closebtn.classList.add("closebtn");
  closebtn.innerHTML = '<i class="fa-solid fa-xmark" onclick="removeNotif(this.parentElement.parentElement)"></i>';
  container.appendChild(closebtn);

  nContainer.appendChild(container);
  const notif = {
    id: container.id,
    element: container,
    _title: title,
    _description: description,
    _time: time,
    get title() {
      return this._title;
    },
    set title(t) {
      this.resetTimer();
      container.children[0].innerHTML = t;
      this._title = t;
    },
    get description() {
      return this._description;
    },
    set description(d) {
      this.resetTimer();
      container.children[1].innerHTML = d;
      this._description = d;
    },
    get time() {
      return this._time;
    },
    set time(t) {
      this._time = t;
      this.resetTimer();
    },
    resetTimer: function() {
      if (this.removalTimeout) clearTimeout(this.removalTimeout);
      this.removalTimeout = setTimeout(() => {
        removeNotif(this.element);
      }, this.time)
    },
    removalTimeout: null,
    type: type,
  }
  notif.resetTimer();
  notifications.push(notif);
  return notif;
}
</script>
